/*------------------------------------*  #MODULES
\*------------------------------------*/
*, *:before, *:after {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
}

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

caption, th, td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle;
}

q, blockquote {
  quotes: none;
}

q:before, q:after, blockquote:before, blockquote:after {
  content: "";
  content: none;
}

a img {
  border: none;
}

article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section, summary {
  display: block;
}

button, input {
  line-height: normal;
}

button, input, select, textarea {
  font-size: 100%;
  margin: 0;
  vertical-align: baseline;
  *vertical-align: middle;
}

button, input[type="button"], input[type="reset"], input[type="submit"] {
  cursor: pointer;
  *overflow: visible;
}

button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

textarea {
  overflow: auto;
  vertical-align: top;
  resize: vertical;
}

/*------------------------------------*  #COLORS
\*------------------------------------*/
/*------------------------------------*  #BREAKPOINTS
\*------------------------------------*/
/*------------------------------------*  #FONTS
\*------------------------------------*/
body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
}

.body em,
.body i, .body blockquote > p, .body blockquote > blockquote p {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-style: italic;
}

.ts-title, .body h1,
.body h2, .ts-subtitle, .body h3, .ts-subsubtitle, .body h4,
.body h5,
.body h6, .body b,
.body strong, .body dl dt, .body table th {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-weight: 700;
}

.body em > b,
.body b > em,
.body i > b,
.body b > i,
.body em > strong,
.body strong > em,
.body i > strong,
.body strong > i {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-style: italic;
  font-weight: 700;
}

/*------------------------------------*    #TYPESIZE/SCALE
\*------------------------------------*/
html {
  font-size: 18px;
}

@media (max-width: 767px) {
  html {
    font-size: 15px;
  }
}

.ts-xsmall {
  font-size: 0.667rem;
  line-height: 1.5;
}

.ts-small, .body small, .body code,
.body samp,
.body pre, figcaption {
  font-size: 0.778rem;
  line-height: 1.5;
}

.ts-body, .body, .body p, .body dl, .body ol li, .body ol li:before, .body ul li, .body ul li:before {
  font-size: 1rem;
  line-height: 1.5;
}

.ts-subsubtitle, .body h4,
.body h5,
.body h6 {
  font-size: 1.222rem;
  line-height: 1.5;
}

.ts-subtitle, .body h3 {
  font-size: 2rem;
  line-height: 1.3;
}

.ts-title, .body h1,
.body h2 {
  font-size: 2.667rem;
  line-height: 1.3;
}

/*------------------------------------*  #SPACING
\*------------------------------------*/
/*------------------------------------*  #BORDERS WIDTH
\*------------------------------------*/
/*------------------------------------*  #MIXINS
\*------------------------------------*/
/*------------------------------------*  #TEXT-STYLES
\*------------------------------------*/
.ts-link {
  color: #0000FF;
  border-bottom: 1px solid #0000FF;
  text-decoration: none;
}

.ts-link:hover {
  color: #888888;
  border-color: #888888;
  text-decoration: none;
}

/*------------------------------------*  #TITLE
\*------------------------------------*/
.body h2,
.body h3,
.body h4 {
  margin-bottom: 1em;
}

.body h2 + h3,
.body h3 + h4 {
  margin-top: 0;
}

/*------------------------------------*  #PARAGRAPH
\*------------------------------------*/
.body p {
  margin-bottom: .5em;
}

/*------------------------------------*  #LINK
\*------------------------------------*/
.body a {
  color: #0000FF;
  text-decoration: none;
}

.body a:hover {
  color: #888888;
  text-decoration: underline;
}

/*------------------------------------*  #BOLD-ITALIC
\*------------------------------------*/
/*------------------------------------*  #BLOCKQUOTE
\*------------------------------------*/
.body blockquote {
  padding-left: 1em;
  border-left: 1px solid #000000;
  margin-top: 1em;
}

/*------------------------------------*  #DEFINITIONS
\*------------------------------------*/
.body dl dt {
  padding-bottom: .3em;
}

.body dl dt:first-of-type {
  padding-top: .6em;
  border-top: 1px solid #000000;
}

.body dl dd {
  padding-bottom: .6em;
  margin-bottom: .6em;
  border-bottom: 1px #000000 solid;
}

/*------------------------------------*  #LISTS
\*------------------------------------*/
.body ol {
  counter-reset: li;
}

.body ol li {
  position: relative;
  padding-left: 1.2em;
  margin-bottom: .5em;
}

.body ol li:before {
  content: counter(li);
  counter-increment: li;
  position: absolute;
  left: 0;
  color: rgba(0, 0, 0, 0.5);
}

.body ol ol > li:first-of-type {
  margin-top: .5em;
}

.body ul li {
  position: relative;
  padding-left: 1.2em;
  margin-bottom: .5em;
}

.body ul li:before {
  content: "-";
  position: absolute;
  left: 0;
  font-size: 1em;
}

.body ul ol > li:first-of-type {
  margin-top: .5em;
}

/*------------------------------------*  #TABLE
\*------------------------------------*/
.body table {
  width: 100%;
}

.body table thead {
  border-bottom: 3px solid #000000;
}

.body table th {
  text-align: left;
}

.body table tbody tr:nth-child(odd) {
  background-color: rgba(0, 0, 0, 0.1);
}

.body table tfoot {
  border-top: 3px solid #000000;
}

.body table th,
.body table td {
  padding: .5em 0;
}

@media (max-width: 767px) {
  .body table th,
  .body table td {
    display: block;
  }
}

/*------------------------------------*  #SPACING
\*------------------------------------*/
.body p + h1,
.body ul + h1,
.body ol + h1,
.body blockquote + h1,
.body figure + h1,
.body p + h2,
.body ul + h2,
.body ol + h2,
.body blockquote + h2,
.body figure + h2,
.body p + h3,
.body ul + h3,
.body ol + h3,
.body blockquote + h3,
.body figure + h3,
.body p + h4,
.body ul + h4,
.body ol + h4,
.body blockquote + h4,
.body figure + h4,
.body p + h5,
.body ul + h5,
.body ol + h5,
.body blockquote + h5,
.body figure + h5,
.body p + h6,
.body ul + h6,
.body ol + h6,
.body blockquote + h6,
.body figure + h6 {
  margin-top: 1.3em;
}

.body ul,
.body ol,
.body .embed-container {
  margin-bottom: 1.667rem;
}

/*------------------------------------*  #MISC
\*------------------------------------*/
.body ol,
.body ul {
  list-style: none;
}

.body sub,
.body sup {
  font-size: .75em;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

.body sup {
  top: -0.5em;
}

.body sub {
  bottom: -0.25em;
}

.body abbr {
  border-bottom: 1px dotted #000000;
  cursor: help;
}

.body q:before,
.body cite:before {
  content: '"';
}

.body q:after,
.body cite:after {
  content: '"';
}

.body mark {
  background-color: rgba(0, 0, 0, 0.6);
  color: #000000;
}

.body code,
.body samp,
.body pre {
  font-family: monospace;
}

.body hr {
  background: #000000;
  height: 3px;
  border: none;
  margin: 0;
}

/*------------------------------------*  #MEDIAS
\*------------------------------------*/
img, video, object {
  max-width: 100%;
  height: auto;
}

img {
  display: block;
}

img.image-lazy {
  width: 100%;
}

img.image-lazy:not(.lazyloaded) {
  opacity: 0;
  -webkit-transition: opacity 1s ease-in-out;
  transition: opacity 1s ease-in-out;
}

img.image-lazy.lazyloaded {
  opacity: 1;
  -webkit-transition: opacity 1s ease-in-out;
  transition: opacity 1s ease-in-out;
}

figcaption {
  margin-top: 0.556rem;
}

.embed-container {
  position: relative;
  padding-bottom: 56.25%;
  height: 0;
  overflow: hidden;
  max-width: 100%;
}

.embed-container iframe,
.embed-container object,
.embed-container embed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.body figure {
  margin: 1em 0;
}

/*------------------------------------*  #MISC
\*------------------------------------*/
.hidden {
  display: none !important;
}

@media (max-width: 767px) {
  .hidden-mobile {
    display: none !important;
  }
}

@media (min-width: 769px) {
  .hidden-desktop {
    display: none !important;
  }
}

.nav__list {
  list-style: none;
}

.sg-main {
  padding: 2rem;
}

/*------------------------------------*  #PARTIALS
\*------------------------------------*/
/*------------------------------------*  #GLOBAL
\*------------------------------------*/
.wrapper {
  width: 100%;
  padding-left: 5%;
  padding-right: 5%;
}

@media (min-width: 1441px) {
  .wrapper {
    padding-left: 12%;
    padding-right: 12%;
  }
}

/*------------------------------------*  #VENDOR
\*------------------------------------*/
/*------------------------------------*  #BASE-STYLES
\*------------------------------------*/
body {
  background: #FFFFFF;
  color: #000000;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: subpixel-antialiased;
}

body ::-moz-selection {
  background-color: rgba(0, 0, 0, 0.2);
  color: #000000;
}

body ::selection {
  background-color: rgba(0, 0, 0, 0.2);
  color: #000000;
}

/*------------------------------------*  #PRINT
\*------------------------------------*/
@media print {
  body {
    font-size: 62.5%;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/