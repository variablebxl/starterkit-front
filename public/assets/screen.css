/*------------------------------------*\
  #MODULES
\*------------------------------------*/
/* line 4, resources/assets/css/modules/_reset.scss */
*, *:before, *:after {
  box-sizing: border-box; }

/* line 6, resources/assets/css/modules/_reset.scss */
html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font: inherit;
  font-size: 100%;
  vertical-align: baseline; }

/* line 7, resources/assets/css/modules/_reset.scss */
table {
  border-collapse: collapse;
  border-spacing: 0; }

/* line 8, resources/assets/css/modules/_reset.scss */
caption, th, td {
  text-align: left;
  font-weight: normal;
  vertical-align: middle; }

/* line 9, resources/assets/css/modules/_reset.scss */
q, blockquote {
  quotes: none; }

/* line 10, resources/assets/css/modules/_reset.scss */
q:before, q:after, blockquote:before, blockquote:after {
  content: "";
  content: none; }

/* line 11, resources/assets/css/modules/_reset.scss */
a img {
  border: none; }

/* line 12, resources/assets/css/modules/_reset.scss */
article, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section, summary {
  display: block; }

/* line 18, resources/assets/css/modules/_reset.scss */
button, input {
  line-height: normal; }

/* line 19, resources/assets/css/modules/_reset.scss */
button, input, select, textarea {
  font-size: 100%;
  margin: 0;
  vertical-align: baseline;
  *vertical-align: middle; }

/* line 20, resources/assets/css/modules/_reset.scss */
button, input[type="button"], input[type="reset"], input[type="submit"] {
  cursor: pointer;
  *overflow: visible; }

/* line 21, resources/assets/css/modules/_reset.scss */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/* line 22, resources/assets/css/modules/_reset.scss */
textarea {
  overflow: auto;
  vertical-align: top;
  resize: vertical; }

/*------------------------------------*\
  #COLORS
\*------------------------------------*/
/*------------------------------------*\
  #BREAKPOINTS
\*------------------------------------*/
/*------------------------------------*\
  #FONTS
\*------------------------------------*/
/* line 40, resources/assets/css/modules/_variables.scss */
body {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif; }

/* line 44, resources/assets/css/modules/_variables.scss */
.body em,
.body i, .body blockquote > p, .body blockquote > blockquote p {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-style: italic; }

/* line 49, resources/assets/css/modules/_variables.scss */
.ts-title, .body h1,
.body h2, .ts-subtitle, .body h3, .ts-subsubtitle, .body h4,
.body h5,
.body h6, .body b,
.body strong, .body dl dt, .body table th {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-weight: 700; }

/* line 54, resources/assets/css/modules/_variables.scss */
.body em > b,
.body b > em,
.body i > b,
.body b > i,
.body em > strong,
.body strong > em,
.body i > strong,
.body strong > i {
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-style: italic;
  font-weight: 700; }

/*------------------------------------*\
    #TYPESIZE/SCALE
\*------------------------------------*/
/* line 81, resources/assets/css/modules/_variables.scss */
html {
  font-size: 18px; }
  @media (max-width: 767px) {
    /* line 81, resources/assets/css/modules/_variables.scss */
    html {
      font-size: 15px; } }

/* line 88, resources/assets/css/modules/_variables.scss */
.ts-xsmall {
  font-size: 0.667rem;
  line-height: 1.5; }

/* line 92, resources/assets/css/modules/_variables.scss */
.ts-small, .body small, .body code,
.body samp,
.body pre, figcaption {
  font-size: 0.778rem;
  line-height: 1.5; }

/* line 96, resources/assets/css/modules/_variables.scss */
.ts-body, .body, .body p, .body dl, .body ol li, .body ol li:before, .body ul li, .body ul li:before {
  font-size: 1rem;
  line-height: 1.5; }

/* line 100, resources/assets/css/modules/_variables.scss */
.ts-subsubtitle, .body h4,
.body h5,
.body h6 {
  font-size: 1.222rem;
  line-height: 1.5; }

/* line 104, resources/assets/css/modules/_variables.scss */
.ts-subtitle, .body h3 {
  font-size: 2rem;
  line-height: 1.3; }

/* line 108, resources/assets/css/modules/_variables.scss */
.ts-title, .body h1,
.body h2 {
  font-size: 2.667rem;
  line-height: 1.3; }

/*------------------------------------*\
  #SPACING
\*------------------------------------*/
/*------------------------------------*\
  #BORDERS WIDTH
\*------------------------------------*/
/*------------------------------------*\
  #MIXINS
\*------------------------------------*/
/*------------------------------------*\
  #TEXT-STYLES
\*------------------------------------*/
/* line 26, resources/assets/css/modules/_typography.scss */
.ts-link {
  color: #0000FF;
  border-bottom: 1px solid #0000FF;
  text-decoration: none; }
  /* line 30, resources/assets/css/modules/_typography.scss */
  .ts-link:hover {
    color: #888888;
    border-color: #888888;
    text-decoration: none; }

/*------------------------------------*\
  #TITLE
\*------------------------------------*/
/* line 54, resources/assets/css/modules/_typography.scss */
.body h2,
.body h3,
.body h4 {
  margin-bottom: 1em; }

/* line 59, resources/assets/css/modules/_typography.scss */
.body h2 + h3,
.body h3 + h4 {
  margin-top: 0; }

/*------------------------------------*\
  #PARAGRAPH
\*------------------------------------*/
/* line 73, resources/assets/css/modules/_typography.scss */
.body p {
  margin-bottom: .5em; }

/*------------------------------------*\
  #LINK
\*------------------------------------*/
/* line 85, resources/assets/css/modules/_typography.scss */
.body a {
  color: #0000FF;
  text-decoration: none; }
  /* line 88, resources/assets/css/modules/_typography.scss */
  .body a:hover {
    color: #888888;
    text-decoration: underline; }

/*------------------------------------*\
  #BOLD-ITALIC
\*------------------------------------*/
/*------------------------------------*\
  #BLOCKQUOTE
\*------------------------------------*/
/* line 127, resources/assets/css/modules/_typography.scss */
.body blockquote {
  padding-left: 1em;
  border-left: 1px solid #000000;
  margin-top: 1em; }

/*------------------------------------*\
  #DEFINITIONS
\*------------------------------------*/
/* line 147, resources/assets/css/modules/_typography.scss */
.body dl dt {
  padding-bottom: .3em; }
  /* line 150, resources/assets/css/modules/_typography.scss */
  .body dl dt:first-of-type {
    padding-top: .6em;
    border-top: 1px solid #000000; }

/* line 155, resources/assets/css/modules/_typography.scss */
.body dl dd {
  padding-bottom: .6em;
  margin-bottom: .6em;
  border-bottom: 1px #000000 solid; }

/*------------------------------------*\
  #LISTS
\*------------------------------------*/
/* line 169, resources/assets/css/modules/_typography.scss */
.body ol {
  counter-reset: li; }
  /* line 171, resources/assets/css/modules/_typography.scss */
  .body ol li {
    position: relative;
    padding-left: 1.2em;
    margin-bottom: .5em; }
    /* line 176, resources/assets/css/modules/_typography.scss */
    .body ol li:before {
      content: counter(li);
      counter-increment: li;
      position: absolute;
      left: 0;
      color: rgba(0, 0, 0, 0.5); }
  /* line 185, resources/assets/css/modules/_typography.scss */
  .body ol ol > li:first-of-type {
    margin-top: .5em; }

/* line 192, resources/assets/css/modules/_typography.scss */
.body ul li {
  position: relative;
  padding-left: 1.2em;
  margin-bottom: .5em; }
  /* line 197, resources/assets/css/modules/_typography.scss */
  .body ul li:before {
    content: "-";
    position: absolute;
    left: 0;
    font-size: 1em; }

/* line 205, resources/assets/css/modules/_typography.scss */
.body ul ol > li:first-of-type {
  margin-top: .5em; }

/*------------------------------------*\
  #TABLE
\*------------------------------------*/
/* line 217, resources/assets/css/modules/_typography.scss */
.body table {
  width: 100%; }
  /* line 219, resources/assets/css/modules/_typography.scss */
  .body table thead {
    border-bottom: 3px solid #000000; }
  /* line 222, resources/assets/css/modules/_typography.scss */
  .body table th {
    text-align: left; }
  /* line 227, resources/assets/css/modules/_typography.scss */
  .body table tbody tr:nth-child(odd) {
    background-color: rgba(0, 0, 0, 0.1); }
  /* line 231, resources/assets/css/modules/_typography.scss */
  .body table tfoot {
    border-top: 3px solid #000000; }
  /* line 234, resources/assets/css/modules/_typography.scss */
  .body table th,
  .body table td {
    padding: .5em 0; }
  @media (max-width: 767px) {
    /* line 239, resources/assets/css/modules/_typography.scss */
    .body table th,
    .body table td {
      display: block; } }

/*------------------------------------*\
  #SPACING
\*------------------------------------*/
/* line 253, resources/assets/css/modules/_typography.scss */
.body p + h1,
.body ul + h1,
.body ol + h1,
.body blockquote + h1,
.body figure + h1,
.body p + h2,
.body ul + h2,
.body ol + h2,
.body blockquote + h2,
.body figure + h2,
.body p + h3,
.body ul + h3,
.body ol + h3,
.body blockquote + h3,
.body figure + h3,
.body p + h4,
.body ul + h4,
.body ol + h4,
.body blockquote + h4,
.body figure + h4,
.body p + h5,
.body ul + h5,
.body ol + h5,
.body blockquote + h5,
.body figure + h5,
.body p + h6,
.body ul + h6,
.body ol + h6,
.body blockquote + h6,
.body figure + h6 {
  margin-top: .6em; }

/* line 285, resources/assets/css/modules/_typography.scss */
.body ul,
.body ol,
.body .embed-container {
  margin-bottom: 1em; }

/*------------------------------------*\
  #MISC
\*------------------------------------*/
/* line 299, resources/assets/css/modules/_typography.scss */
.body ol,
.body ul {
  list-style: none; }

/* line 303, resources/assets/css/modules/_typography.scss */
.body sub,
.body sup {
  font-size: .75em;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

/* line 310, resources/assets/css/modules/_typography.scss */
.body sup {
  top: -0.5em; }

/* line 313, resources/assets/css/modules/_typography.scss */
.body sub {
  bottom: -0.25em; }

/* line 319, resources/assets/css/modules/_typography.scss */
.body abbr {
  border-bottom: 1px dotted #000000;
  cursor: help; }

/* line 325, resources/assets/css/modules/_typography.scss */
.body q:before,
.body cite:before {
  content: '"'; }

/* line 328, resources/assets/css/modules/_typography.scss */
.body q:after,
.body cite:after {
  content: '"'; }

/* line 332, resources/assets/css/modules/_typography.scss */
.body mark {
  background-color: rgba(0, 0, 0, 0.6);
  color: #000000; }

/* line 336, resources/assets/css/modules/_typography.scss */
.body code,
.body samp,
.body pre {
  font-family: monospace; }

/* line 342, resources/assets/css/modules/_typography.scss */
.body hr {
  background: #000000;
  height: 3px;
  border: none;
  margin: 0; }

/*------------------------------------*\
  #MEDIAS
\*------------------------------------*/
/* line 6, resources/assets/css/modules/_medias.scss */
img, video, object {
  max-width: 100%;
  height: auto; }

/* line 11, resources/assets/css/modules/_medias.scss */
img {
  display: block; }

/* line 15, resources/assets/css/modules/_medias.scss */
img.image-lazy {
  width: 100%; }
  /* line 17, resources/assets/css/modules/_medias.scss */
  img.image-lazy:not(.lazyloaded) {
    opacity: 0;
    transition: opacity 1s ease-in-out; }
  /* line 21, resources/assets/css/modules/_medias.scss */
  img.image-lazy.lazyloaded {
    opacity: 1;
    transition: opacity 1s ease-in-out; }

/* line 27, resources/assets/css/modules/_medias.scss */
figcaption {
  margin-top: 0.556rem; }

/* line 32, resources/assets/css/modules/_medias.scss */
.embed-container {
  position: relative;
  padding-bottom: 56.25%;
  height: 0;
  overflow: hidden;
  max-width: 100%; }

/* line 39, resources/assets/css/modules/_medias.scss */
.embed-container iframe,
.embed-container object,
.embed-container embed {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%; }

/* line 49, resources/assets/css/modules/_medias.scss */
.body figure {
  margin: 1em 0; }

/*------------------------------------*\
  #MISC
\*------------------------------------*/
/* line 6, resources/assets/css/modules/_misc.scss */
.hidden {
  display: none !important; }

@media (max-width: 1023px) {
  /* line 10, resources/assets/css/modules/_misc.scss */
  .hidden-small {
    display: none !important; } }

@media (min-width: 1024px) {
  /* line 15, resources/assets/css/modules/_misc.scss */
  .hidden-large {
    display: none !important; } }

/* line 21, resources/assets/css/modules/_misc.scss */
.nav__list {
  list-style: none; }

/* line 29, resources/assets/css/modules/_mixins.scss */
.clear::after {
  display: block;
  content: "";
  clear: both; }

/* line 30, resources/assets/css/modules/_misc.scss */
.sg-main {
  padding: 2rem; }

/*------------------------------------*\
  #PARTIALS
\*------------------------------------*/
/*------------------------------------*\
  #GLOBAL
\*------------------------------------*/
/* line 6, resources/assets/css/partials/templates/_global.scss */
.wrapper {
  width: 100%;
  padding-left: 5%;
  padding-right: 5%; }
  @media (min-width: 1440px) {
    /* line 6, resources/assets/css/partials/templates/_global.scss */
    .wrapper {
      padding-left: 12%;
      padding-right: 12%; } }

/*------------------------------------*\
  #VENDOR
\*------------------------------------*/
/*------------------------------------*\
  #BASE-STYLES
\*------------------------------------*/
/* line 38, resources/assets/css/screen.scss */
body {
  background: #FFFFFF;
  color: #000000;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased; }
  /* line 44, resources/assets/css/screen.scss */
  body ::-moz-selection {
    background-color: rgba(0, 0, 0, 0.2);
    color: #000000; }
  /* line 45, resources/assets/css/screen.scss */
  body ::-moz-selection {
    background-color: rgba(0, 0, 0, 0.2);
    color: #000000; }
  body ::selection {
    background-color: rgba(0, 0, 0, 0.2);
    color: #000000; }

/*------------------------------------*\
  #PRINT
\*------------------------------------*/
/*------------------------------------*\
  #PRINT STYLE
\*------------------------------------*/
@media print {
  /* line 57, resources/assets/css/screen.scss */
  html {
    font-size: 14px; }
  @page {
    margin: 2cm 2.5cm; }
  /* line 10, resources/assets/css/modules/_print-style.scss */
  body {
    font-family: Georgia, Times, Times New Roman, serif;
    font-size: 16pt;
    line-height: 22pt;
    color: #000000; }
  /* line 16, resources/assets/css/modules/_print-style.scss */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6,
  p,
  ul,
  ol {
    font-family: Georgia, Times, Times New Roman, serif;
    font-style: normal;
    font-variant: normal;
    font-weight: 400; }
  /* line 30, resources/assets/css/modules/_print-style.scss */
  h1 {
    font-size: 32pt;
    line-height: 40pt; }
  /* line 34, resources/assets/css/modules/_print-style.scss */
  h2 {
    font-size: 24pt;
    line-height: 30pt; }
  /* line 38, resources/assets/css/modules/_print-style.scss */
  h3 {
    font-size: 20pt;
    line-height: 26pt; }
  /* line 42, resources/assets/css/modules/_print-style.scss */
  h4 {
    font-size: 14pt;
    line-height: 20pt; }
  /* line 46, resources/assets/css/modules/_print-style.scss */
  p,
  ul,
  ol,
  blockquote {
    font-size: 11pt;
    line-height: 16pt; }
  /* line 53, resources/assets/css/modules/_print-style.scss */
  blockquote {
    text-align: center; }
  /* line 56, resources/assets/css/modules/_print-style.scss */
  small {
    font-size: 9pt;
    line-height: 14pt; }
  /* line 60, resources/assets/css/modules/_print-style.scss */
  p {
    page-break-inside: avoid; }
  /* line 63, resources/assets/css/modules/_print-style.scss */
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    page-break-after: avoid; }
  /* line 71, resources/assets/css/modules/_print-style.scss */
  hr {
    border: 0;
    height: 1px;
    background-color: #000000;
    margin: .3cm 0; }
  /* line 77, resources/assets/css/modules/_print-style.scss */
  .article {
    width: 100%;
    height: auto !important;
    margin: 0;
    display: block;
    padding: 0;
    overflow: visible;
    box-shadow: none; }
  /* line 86, resources/assets/css/modules/_print-style.scss */
  .header,
  .footer,
  .section.print {
    display: none !important; }
  /* line 91, resources/assets/css/modules/_print-style.scss */
  body {
    background: #fff !important;
    color: #000; }
  /* line 96, resources/assets/css/modules/_print-style.scss */
  .body p {
    widows: 3;
    orphans: 3; }
  /* line 97, resources/assets/css/modules/_print-style.scss */
  .body a {
    page-break-inside: avoid; }
  /* line 98, resources/assets/css/modules/_print-style.scss */
  .body blockquote {
    page-break-inside: avoid; }
  /* line 99, resources/assets/css/modules/_print-style.scss */
  .body h1, .body h2, .body h3, .body h4, .body h5, .body h6 {
    page-break-after: avoid;
    page-break-inside: avoid; }
  /* line 100, resources/assets/css/modules/_print-style.scss */
  .body img {
    page-break-inside: avoid;
    page-break-after: avoid; }
  /* line 101, resources/assets/css/modules/_print-style.scss */
  .body table, .body pre {
    page-break-inside: avoid; }
  /* line 102, resources/assets/css/modules/_print-style.scss */
  .body ul, .body ol, .body dl {
    page-break-before: avoid; }
  /* line 103, resources/assets/css/modules/_print-style.scss */
  .body a:link, .body a:visited, .body a {
    background: transparent;
    color: #2C51DF;
    font-weight: bold;
    text-decoration: underline;
    text-align: left; }
  /* line 110, resources/assets/css/modules/_print-style.scss */
  .body a[href^=http]:after {
    content: " <" attr(href) "> "; }
  /* line 111, resources/assets/css/modules/_print-style.scss */
  .body article a[href^="#"]:after {
    content: ""; }
  /* line 112, resources/assets/css/modules/_print-style.scss */
  .body a:not(:local-link):after {
    content: " <" attr(href) "> "; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
